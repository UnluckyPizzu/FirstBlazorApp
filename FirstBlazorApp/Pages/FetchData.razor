@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<h4>Enter city:</h4>
<input type="text" @bind="@City"/>
<button @onclick="GetWeatherForecast" >Search</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    var today = DateTime.Today;
    <h4> @today.ToShortDateString() </h4>
    <p>Region @forecasts.region</p>
    <p>DayHour @forecasts.currentConditions.dayhour</p>
    <p>Temp (C) @forecasts.currentConditions.temp.c</p>
    <p>Summary @forecasts.currentConditions.comment</p>
    <p>Humidity @forecasts.currentConditions.humidity</p>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Min Temp. (C)</th>
                <th>Max Temp. (C)</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts.next_days)
            {
                <tr>
                    <td>@forecast.day</td>
                    <td>@forecast.min_temp.c</td>
                    <td>@forecast.max_temp.c</td>
                    <td>@forecast.comment</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Root? forecasts;
    private string City = "Rome";

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<Root>("Rome");
    }
    
    private async Task GetWeatherForecast()
    {
        forecasts = await Http.GetFromJsonAsync<Root>(City);
    }

    public class ContactAuthor
    {
        public string email { get; set; }
        public string auth_note { get; set; }
    }

    public class CurrentConditions
    {
        public string dayhour { get; set; }
        public Temp temp { get; set; }
        public string precip { get; set; }
        public string humidity { get; set; }
        public Wind wind { get; set; }
        public string iconURL { get; set; }
        public string comment { get; set; }
    }

    public class MaxTemp
    {
        public int c { get; set; }
        public int f { get; set; }
    }

    public class MinTemp
    {
        public int c { get; set; }
        public int f { get; set; }
    }

    public class NextDay
    {
        public string day { get; set; }
        public string comment { get; set; }
        public MaxTemp max_temp { get; set; }
        public MinTemp min_temp { get; set; }
        public string iconURL { get; set; }
    }

    public class Root
    {
        public string region { get; set; }
        public CurrentConditions currentConditions { get; set; }
        public List<NextDay> next_days { get; set; }
        public ContactAuthor contact_author { get; set; }
        public string data_source { get; set; }
    }

    public class Temp
    {
        public int c { get; set; }
        public int f { get; set; }
    }

    public class Wind
    {
        public int km { get; set; }
        public int mile { get; set; }
    }


}
